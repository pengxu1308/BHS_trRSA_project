???for id = 18:18            if id==6 ||id==1 || id==18 || id==30 || id==36 || id==37        continue    end        eeglab    path = ['C:\Unconscious_EEG\Partecipants\S', num2str(id),];    savepath = ['C:\Unconscious_EEG\Timefrequencyanalysis'];    %   removed_electrodes = { }; % channel names e.g. {'O1' 'O2'}    cd(path);    sesfiles = dir('*.ses'); % sessionfile    cd(sesfiles.name(9:end-4))        % load merged file    eeglabfile = ['S',num2str(id), '_merged.set'];    EEG = pop_loadset('filename', eeglabfile);        % downsample    EEG = pop_resample(EEG, 250);        % update EOG channel locations    load('C:\Unconscious_EEG\Scripts&functions\64_and_leftEOG.mat')    EEG.chanlocs = chanlocs;            %% Modify event markers    % original markers ----------    % 99 = fix    % 40 = left Gabor    % 50 = right Gabor    % 66 = high contrast Gabor    %    % 10 = incorrect    % 11 = correct    % 13 = n/a    %    % 20 = left response    % 30 = right response    %    % 100-103 = visibility rating        for i = 1:length(EEG.event)        if i > (length(EEG.event)-3); continue; end                visibility = str2num(EEG.event(i+3).type);                       % right hemifield gabor        if strcmp(EEG.event(i).type, '50')            switch EEG.event(i+1).type                case '11'                    if visibility == 100                        EEG.event(i).type = 'Right_correct_0';                    elseif visibility == 101                        EEG.event(i).type = 'Right_correct_1';                    elseif visibility == 102                        EEG.event(i).type = 'Right_correct_2';                    elseif visibility == 103                        EEG.event(i).type = 'Right_correct_3';                    end                                                        case '10'                    if visibility == 100                        EEG.event(i).type = 'Right_incorrect_0';                    elseif visibility == 101                        EEG.event(i).type = 'Right_incorrect_1';                    elseif visibility == 102                        EEG.event(i).type = 'Right_incorrect_2';                    elseif visibility == 103                        EEG.event(i).type = 'Right_incorrect_3';                    end            end                                    % left hemifield gabor        elseif strcmp(EEG.event(i).type, '40')            switch EEG.event(i+1).type                case '11'                    if visibility == 100                        EEG.event(i).type = 'Left_correct_0';                    elseif visibility == 101                        EEG.event(i).type = 'Left_correct_1';                    elseif visibility == 102                        EEG.event(i).type = 'Left_correct_2';                    elseif visibility == 103                        EEG.event(i).type = 'Left_correct_3';                    end                                    case '10'                    if visibility == 100                        EEG.event(i).type = 'Left_incorrect_0';                    elseif visibility == 101                        EEG.event(i).type = 'Left_incorrect_1';                    elseif visibility == 102                        EEG.event(i).type = 'Left_incorrect_2';                    elseif visibility == 103                        EEG.event(i).type = 'Left_incorrect_3';                    end            end        end    end        %%        % re-reference and hp-filter    EEG = pop_reref( EEG, []);    EEG = pop_eegfiltnew(EEG, 0.25,80,3380,0,[],0);        % plot freq spectrum    % figure;    % set(gcf, 'position', [1600 800 1000 500])    % subplot(1,2,1)    % pop_spectopo(EEG, 1, 'EEG' , 'percent', 15, 'freq', [6 10 22], 'freqrange',[0 100],'electrodes','on');    % drawnow        % clean line noise    EEG = pop_cleanline(EEG, 'bandwidth',2,'chanlist',[1:EEG.nbchan] ,'computepower',0,'linefreqs',[50 100] ,'normSpectrum',0,'p',0.01,'pad',2,'plotfigures',0,'scanforlines',1,'sigtype','Channels','tau',100,'verb',1,'winsize',4,'winstep',1);        % plot cleaned spectrum    % subplot(1,2,2)    % pop_spectopo(EEG, 1, 'EEG' , 'percent', 15, 'freq', [6 10 22], 'freqrange',[0 100],'electrodes','on');    % drawnow        % epoch data    EEG = pop_epoch( EEG, {  '77' 'Left_correct_0'  'Left_correct_1'  'Left_correct_2'  'Left_correct_3'  'Left_incorrect_0'  'Left_incorrect_1' 'Left_incorrect_2'  'Left_incorrect_3'  'Right_correct_0'  'Right_correct_1'  'Right_correct_2'  'Right_correct_3'   'Right_incorrect_0'  'Right_incorrect_1'  'Right_incorrect_2'  'Right_incorrect_3' },...        [-2.0  1.5], 'newname', 'epochs', 'epochinfo', 'yes');        % remove trials with eye movements -500-500 ms relative to stimulus    % presentation    EEG = pop_eegthresh(EEG,1,[33:34] ,-75,75,-0.5,0.5,0,1);        % artifact rejection    % EEG = pop_jointprob(EEG, 1, [1:size(EEG.data,1)], 4, 4, 0, 1, 0);        %%    % Discard channels to make the data full ranked.    dataRank = rank(squeeze(EEG.data(:,:,1)));    channelSubset = loc_subsets(EEG.chanlocs, dataRank);    EEG = pop_select( EEG,'channel', channelSubset{1});    EEG = pop_chanedit(EEG, 'eval','chans = pop_chancenter( chans, [],[]);');        % remove those electrodes that were interpolated in the beginning    % EEG = pop_select( EEG,'nochannel',removed_electrodes);            %%    % ICA    [EEG] = pop_runica(EEG, 'icatype', 'runica');        % save before removing components    EEG = pop_saveset(EEG, 'filename', strcat(path(end-1:end), '_ica.set'));        % remove components using ADJUST    out = strcat(path(end-1:end), '_ADJUST_report.txt');    [art_talk, horiz, vert, blink, disc, soglia_DV, diff_var, soglia_K, med2_K, meanK, soglia_SED, med2_SED, SED, soglia_SAD, med2_SAD, SAD, ...        soglia_GDSF, med2_GDSF, GDSF, soglia_V, med2_V, nuovaV, soglia_D, maxdin]=ADJUST(EEG,out);    EEG = pop_subcomp( EEG, art_talk, 0);        % interpolate missing electrodes, rereference and save    EEG_electrodes = pop_loadset('filename', eeglabfile);    EEG = pop_interp(EEG,chanlocs, 'spherical');        % remove EOG electrodes    EEG = pop_select( EEG,'nochannel',{'HEOG' 'VEOG'});        % save preprocessed dataset    EEG = pop_saveset(EEG, 'filename', strcat(path(end-1:end), '_ica_ADJUST.set'));            EEG_left = pop_epoch( EEG, { 'Left_correct_0' 'Left_correct_1' 'Left_correct_2' 'Left_correct_3'...                            'Left_incorrect_0' 'Left_incorrect_1' 'Left_incorrect_2' 'Left_incorrect_3'}, [-2.0  1.5], 'newname', 'epochs', 'epochinfo', 'yes');    EEG_right = pop_epoch( EEG, { 'Right_correct_0' 'Right_correct_1' 'Right_correct_2' 'Right_correct_3'...                            'Right_incorrect_0' 'Right_incorrect_1' 'Right_incorrect_2' 'Right_incorrect_3'}, [-2.0  1.5], 'newname', 'epochs', 'epochinfo', 'yes');%     EEG_catch = pop_epoch( EEG, { '77' }, [-2.0  1.5], 'newname', 'epochs', 'epochinfo', 'yes');                            %% transpose electrode locations so that left hemisphere is always CONTRALATERAL and right is IPSILATERAL relative to stimulus presentation    EEG_left_trans = EEG_left;    EEG_left_trans.data = transpose_electrodes(EEG_left.data);         clear 'EEG' 'EEG_left'    EEG = pop_mergeset(EEG_left_trans, EEG_right);        %% Time-frequency analysis    fprintf('Running time-frequency analysis, channel ')    fprintf('\n')    for ch = 1:size(EEG.data, 1)        fprintf('%i, ', ch)                data = EEG.data(ch,:,:);%         data_catch = EEG_catch.data(ch,:,:);                % ERSP        cycles = [1 12];        freqs = [1:2:30];                [tf,freqs,times]...                = timefreq(squeeze(data),EEG.srate,...                'tlimits', [-2000 1500],...                'cycles', cycles, 'wletmethod', 'dftfilt3', ...                'freqs', freqs, 'freqscale', 'linear');            %         [tf_catch,freqs,times]...%                 = timefreq(squeeze(data_catch),EEG.srate,...%                 'tlimits', [-2000 1500],...%                 'cycles', cycles, 'wletmethod', 'dftfilt3', ...%                 'freqs', freqs, 'freqscale', 'linear');             TF(:,:,:,ch) = tf;%       TF_catch(:,:,:,ch) = tf_catch;                end    fprintf('\n')        visibility = zeros(size(EEG.data, 3),1);    accuracy = zeros(size(EEG.data, 3),1);    hemifield = zeros(size(EEG.data, 3),1);        for trial = 1:size(EEG.data,3)        %         if sum(strcmp(EEG.epoch(trial).eventtype, '77')) %             stimulus(trial,1) = 0;%         else%             stimulus(trial,1) = 1;%         end                if sum(strcmp(EEG.epoch(trial).eventtype, 'Left_incorrect_0'))             visibility(trial,1) = 0;            accuracy(trial,1) = 0;            hemifield(trial,1) = 1;        elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Left_incorrect_1'))            visibility(trial,1) = 1;            accuracy(trial,1) = 0;            hemifield(trial,1) = 1;        elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Left_incorrect_2'))             visibility(trial,1) = 2;            accuracy(trial,1) = 0;            hemifield(trial,1) = 1;        elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Left_incorrect_3'))            visibility(trial,1) = 3;            accuracy(trial,1) = 0;            hemifield(trial,1) = 1;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Left_correct_0'))            visibility(trial,1) = 0;            accuracy(trial,1) = 1;            hemifield(trial,1) = 1;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Left_correct_1'))            visibility(trial,1) = 1;            accuracy(trial,1) = 1;            hemifield(trial,1) = 1;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Left_correct_2'))             visibility(trial,1) = 2;            accuracy(trial,1) = 1;            hemifield(trial,1) = 1;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Left_correct_3'))            visibility(trial,1) = 3;            accuracy(trial,1) = 1;             hemifield(trial,1) = 1;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Right_incorrect_0'))             visibility(trial,1) = 0;            accuracy(trial,1) = 0;            hemifield(trial,1) = 0;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Right_incorrect_1'))             visibility(trial,1) = 1;            accuracy(trial,1) = 0;            hemifield(trial,1) = 0;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Right_incorrect_2'))            visibility(trial,1) = 2;            accuracy(trial,1) = 0;            hemifield(trial,1) = 0;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Right_incorrect_3'))            visibility(trial,1) = 3;            accuracy(trial,1) = 0;            hemifield(trial,1) = 0;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Right_correct_0'))            visibility(trial,1) = 0;            accuracy(trial,1) = 1;            hemifield(trial,1) = 0;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Right_correct_1'))            visibility(trial,1) = 1;            accuracy(trial,1) = 1;            hemifield(trial,1) = 0;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Right_correct_2'))            visibility(trial,1) = 2;            accuracy(trial,1) = 1;            hemifield(trial,1) = 0;                    elseif sum(strcmp(EEG.epoch(trial).eventtype, 'Right_correct_3'))            visibility(trial,1) = 3;            accuracy(trial,1) = 1;            hemifield(trial,1) = 0;                    end        end        % save workspace    cd(savepath);    save (strcat(num2str(id), '_data.mat'));    clearend